{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"C:\\\\Users\\\\tarun\\\\Downloads\\\\react-firebase-chat-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\tarun\\\\Downloads\\\\react-firebase-chat-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar classnames_1 = __importDefault(require(\"classnames\"));\n\nvar react_1 = __importDefault(require(\"react\"));\n/**\n * Base CSS class.\n * @private\n */\n\n\nvar baseClass = 'react-auto-scroll';\n/**\n * Get a random string.\n * @private\n */\n\nvar getRandomString = function getRandomString() {\n  return Math.random().toString(36).slice(2, 15);\n};\n/**\n * AutoScroll component.\n */\n\n\nexports.default = function (_ref) {\n  var _classnames_1$default;\n\n  var _ref$checkBoxId = _ref.checkBoxId,\n      checkBoxId = _ref$checkBoxId === void 0 ? getRandomString() : _ref$checkBoxId,\n      children = _ref.children,\n      className = _ref.className,\n      height = _ref.height,\n      _ref$optionText = _ref.optionText,\n      optionText = _ref$optionText === void 0 ? 'Auto scroll' : _ref$optionText,\n      _ref$preventInteracti = _ref.preventInteraction,\n      preventInteraction = _ref$preventInteracti === void 0 ? false : _ref$preventInteracti,\n      _ref$scrollBehavior = _ref.scrollBehavior,\n      scrollBehavior = _ref$scrollBehavior === void 0 ? 'smooth' : _ref$scrollBehavior,\n      _ref$showOption = _ref.showOption,\n      showOption = _ref$showOption === void 0 ? true : _ref$showOption;\n\n  var _react_1$default$useS = react_1.default.useState(true),\n      _react_1$default$useS2 = _slicedToArray(_react_1$default$useS, 2),\n      autoScroll = _react_1$default$useS2[0],\n      setAutoScroll = _react_1$default$useS2[1];\n\n  var containerElement = react_1.default.useRef(null);\n  var cls = classnames_1.default(baseClass, className, (_classnames_1$default = {}, _defineProperty(_classnames_1$default, \"\".concat(baseClass, \"--empty\"), react_1.default.Children.count(children) === 0), _defineProperty(_classnames_1$default, \"\".concat(baseClass, \"--prevent-interaction\"), preventInteraction), _defineProperty(_classnames_1$default, \"\".concat(baseClass, \"--showOption\"), showOption), _classnames_1$default));\n  var style = {\n    height: height,\n    overflow: 'auto',\n    scrollBehavior: 'auto',\n    pointerEvents: preventInteraction ? 'none' : 'auto'\n  }; // Handle mousewheel events on the scroll container.\n\n  var onWheel = function onWheel() {\n    var current = containerElement.current;\n\n    if (current && showOption) {\n      setAutoScroll(current.scrollTop + current.offsetHeight === current.scrollHeight);\n    }\n  }; // Apply the scroll behavior property after the first render,\n  // so that the initial render is scrolled all the way to the bottom.\n\n\n  react_1.default.useEffect(function () {\n    setTimeout(function () {\n      var current = containerElement.current;\n\n      if (current) {\n        current.style.scrollBehavior = scrollBehavior;\n      }\n    }, 0);\n  }, [containerElement, scrollBehavior]); // When the children are updated, scroll the container\n  // to the bottom.\n\n  react_1.default.useEffect(function () {\n    if (!autoScroll) {\n      return;\n    }\n\n    var current = containerElement.current;\n\n    if (current) {\n      current.scrollTop = current.scrollHeight;\n    }\n  }, [children, containerElement, autoScroll]);\n  return react_1.default.createElement(\"div\", {\n    className: cls\n  }, react_1.default.createElement(\"div\", {\n    className: \"\".concat(baseClass, \"__scroll-container\"),\n    onWheel: onWheel,\n    ref: containerElement,\n    style: style\n  }, children), showOption && !preventInteraction && react_1.default.createElement(\"div\", {\n    className: \"\".concat(baseClass, \"__option\")\n  }, react_1.default.createElement(\"input\", {\n    checked: autoScroll,\n    className: \"\".concat(baseClass, \"__option-input\"),\n    id: \"\".concat(baseClass, \"__option-input-\").concat(checkBoxId),\n    onChange: function onChange() {\n      return setAutoScroll(!autoScroll);\n    },\n    type: \"checkbox\"\n  }), react_1.default.createElement(\"label\", {\n    className: \"\".concat(baseClass, \"__option-text\"),\n    htmlFor: \"\".concat(baseClass, \"__option-input-\").concat(checkBoxId)\n  }, optionText)));\n};","map":null,"metadata":{},"sourceType":"script"}