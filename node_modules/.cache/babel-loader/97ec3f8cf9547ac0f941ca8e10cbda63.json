{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\saket\\\\Desktop\\\\Saket Sultania\\\\Laptop\\\\MunSoc_Chat_System\\\\React.js-Chat-Group-App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\saket\\\\Desktop\\\\Saket Sultania\\\\Laptop\\\\MunSoc_Chat_System\\\\React.js-Chat-Group-App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\saket\\\\Desktop\\\\Saket Sultania\\\\Laptop\\\\MunSoc_Chat_System\\\\React.js-Chat-Group-App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\saket\\\\Desktop\\\\Saket Sultania\\\\Laptop\\\\MunSoc_Chat_System\\\\React.js-Chat-Group-App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\saket\\\\Desktop\\\\Saket Sultania\\\\Laptop\\\\MunSoc_Chat_System\\\\React.js-Chat-Group-App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\saket\\\\Desktop\\\\Saket Sultania\\\\Laptop\\\\MunSoc_Chat_System\\\\React.js-Chat-Group-App\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\saket\\\\Desktop\\\\Saket Sultania\\\\Laptop\\\\MunSoc_Chat_System\\\\React.js-Chat-Group-App\\\\src\\\\Chat.js\";\nimport React, { Component, useRef } from 'react';\nimport { database } from './firebase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleRight } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this));\n    _this.state = {\n      messages: [],\n      username: ''\n    };\n    _this.onAddMessage = _this.onAddMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var username = localStorage.getItem('chat_username');\n      this.setState({\n        username: username ? username : 'Unknown'\n      });\n      var messagesRef = database.ref('messages').orderByKey().limitToLast(100);\n      messagesRef.on('value', function (snapshot) {\n        var messagesObj = snapshot.val();\n        var messages = [];\n        Object.keys(messagesObj).forEach(function (key) {\n          return messages.push(messagesObj[key]);\n        });\n        messages = messages.map(function (message) {\n          return {\n            text: message.text,\n            user: message.user,\n            time: message.time,\n            id: message.key\n          };\n        });\n\n        _this2.setState(function (prevState) {\n          return {\n            messages: messages\n          };\n        });\n      });\n    }\n  }, {\n    key: \"onAddMessage\",\n    value: function onAddMessage(event) {\n      event.preventDefault();\n      var timex = moment().format('LT');\n      console.log(timex);\n      database.ref('messages').push({\n        text: this.input.value,\n        user: this.state.username,\n        time: timex\n      });\n      this.input.value = '';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Group Chat Room\"), React.createElement(\"div\", {\n        className: \"messages-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.messages.map(function (message) {\n        var _class = message.user === _this3.state.username ? 'message-left container' : 'message-right container';\n\n        return React.createElement(\"div\", {\n          className: _class,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          className: \"name-heading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, message.user), React.createElement(\"p\", {\n          className: \"message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, message.text), React.createElement(\"p\", {\n          className: \"time-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, message.time));\n      })), React.createElement(\"textarea\", {\n        className: \"text-area\",\n        ref: function ref(node) {\n          return _this3.input = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"send_button\",\n        onClick: this.onAddMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \" \", React.createElement(FontAwesomeIcon, {\n        icon: faArrowCircleRight,\n        size: \"2x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport { Chat as default };","map":{"version":3,"sources":["C:\\Users\\saket\\Desktop\\Saket Sultania\\Laptop\\MunSoc_Chat_System\\React.js-Chat-Group-App\\src\\Chat.js"],"names":["React","Component","useRef","database","FontAwesomeIcon","faArrowCircleRight","moment","Chat","state","messages","username","onAddMessage","bind","localStorage","getItem","setState","messagesRef","ref","orderByKey","limitToLast","on","snapshot","messagesObj","val","Object","keys","forEach","key","push","map","message","text","user","time","id","prevState","event","preventDefault","timex","format","console","log","input","value","_class","node"],"mappings":"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","sourcesContent":["import React, { Component, useRef} from 'react';\nimport { database } from './firebase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowCircleRight } from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\n\nexport default class Chat extends Component {\n  constructor() \n  {\n    super();    \n    this.state = \n    {\n      messages: [],\n      username: '',\n    };\n    this.onAddMessage = this.onAddMessage.bind(this);\n  }\n\ncomponentWillMount() \n{\n  const username = localStorage.getItem('chat_username');\n  this.setState({username: username ? username : 'Unknown'})\n  const messagesRef = database.ref('messages')\n  .orderByKey()\n  .limitToLast(100);\n\n  messagesRef.on('value', snapshot => {\n    let messagesObj = snapshot.val();\n    let messages = [];\n    Object.keys(messagesObj).forEach(key => messages.push(messagesObj[key]));\n    messages = messages.map((message) => { return {text: message.text, user: message.user, time: message.time, id: message.key}})\n    this.setState(prevState => ({\n      messages: messages\n    }));\n  });\n}\n\nonAddMessage(event) \n{\n  event.preventDefault();\n  const timex = moment().format('LT');\n  console.log(timex);\n  database.ref('messages').push({text: this.input.value, user: this.state.username, time: timex});\n  this.input.value = '';  \n}\n\n  render() \n  {\n    return (\n      <div className=\"box\">\n        <h2>Group Chat Room</h2>\n        <div className=\"messages-div\">\n            {\n              this.state.messages.map((message) => {\n              const _class = message.user === this.state.username ? 'message-left container' : 'message-right container';\n              return (\n                    <div className={_class}>\n                      <h6 className=\"name-heading\">{message.user}</h6>\n                      <p className=\"message\">{message.text}</p>\n                      <p className=\"time-left\">{message.time}</p>\n                    </div>\n              )\n            })}\n        </div>\n        <textarea className=\"text-area\" ref={node => this.input = node}></textarea>\n        <button className=\"send_button\" onClick={this.onAddMessage}><center> <FontAwesomeIcon icon={faArrowCircleRight} size=\"2x\" /></center></button>\n    </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}