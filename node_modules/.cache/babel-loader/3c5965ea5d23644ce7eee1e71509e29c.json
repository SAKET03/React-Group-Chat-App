{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tarun\\\\Downloads\\\\react-firebase-chat-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tarun\\\\Downloads\\\\react-firebase-chat-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tarun\\\\Downloads\\\\react-firebase-chat-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tarun\\\\Downloads\\\\react-firebase-chat-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tarun\\\\Downloads\\\\react-firebase-chat-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\tarun\\\\Downloads\\\\react-firebase-chat-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarun\\\\Downloads\\\\react-firebase-chat-app-master\\\\src\\\\Chat.js\";\nimport React, { Component, useRef, userState } from 'react';\nimport { database } from './firebase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleRight } from '@fortawesome/free-solid-svg-icons';\nimport moment from 'moment';\nimport AutoScroll from '@brianmcallister/react-auto-scroll';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this));\n    _this.state = {\n      messages: [],\n      username: ''\n    };\n    _this.onAddMessage = _this.onAddMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var username = localStorage.getItem('chat_username');\n      this.setState({\n        username: username ? username : 'Unknown'\n      });\n      var messagesRef = database.ref('messages').orderByKey().limitToLast(100);\n      messagesRef.on('value', function (snapshot) {\n        var messagesObj = snapshot.val();\n        var messages = [];\n        var time = moment().format('LT');\n        console.log(time);\n        Object.keys(messagesObj).forEach(function (key) {\n          return messages.push(messagesObj[key]);\n        });\n        messages = messages.map(function (message) {\n          return {\n            text: message.text,\n            user: message.user,\n            id: message.key\n          };\n        });\n\n        _this2.setState(function (prevState) {\n          return {\n            messages: messages\n          };\n        });\n      });\n    }\n  }, {\n    key: \"onAddMessage\",\n    value: function onAddMessage(event) {\n      var messagesEndRef = useRef(null);\n      event.preventDefault();\n      database.ref('messages').push({\n        text: this.input.value,\n        user: this.state.username\n      });\n      this.input.value = '';\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Commitee Name\"), React.createElement(\"div\", {\n        className: \"messages-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.messages.map(function (message) {\n        var _class = message.user === _this3.state.username ? 'message-left container' : 'message-right container';\n\n        return React.createElement(\"div\", {\n          className: _class,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          className: \"name-heading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, message.user), React.createElement(\"p\", {\n          className: \"marg-left-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, message.text), React.createElement(\"span\", {\n          className: \"time-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, message.time), React.createElement(\"div\", {\n          ref: _this3.messagesEndRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }));\n      })), React.createElement(\"textarea\", {\n        className: \"text-area\",\n        ref: function ref(node) {\n          return _this3.input = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"send_button\",\n        onClick: this.onAddMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \" \", React.createElement(FontAwesomeIcon, {\n        icon: faArrowCircleRight,\n        size: \"2x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport { Chat as default };","map":{"version":3,"sources":["C:\\Users\\tarun\\Downloads\\react-firebase-chat-app-master\\src\\Chat.js"],"names":["React","Component","useRef","userState","database","FontAwesomeIcon","faArrowCircleRight","moment","AutoScroll","Chat","state","messages","username","onAddMessage","bind","localStorage","getItem","setState","messagesRef","ref","orderByKey","limitToLast","on","snapshot","messagesObj","val","time","format","console","log","Object","keys","forEach","key","push","map","message","text","user","id","prevState","event","messagesEndRef","preventDefault","input","value","current","scrollIntoView","behavior","_class","node"],"mappings":"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","sourcesContent":["import React, { Component, useRef, userState } from 'react';\nimport { database } from './firebase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowCircleRight } from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport AutoScroll from '@brianmcallister/react-auto-scroll';\n\nexport default class Chat extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      messages: [],\n      username: '',\n    };\n\n    this.onAddMessage = this.onAddMessage.bind(this);\n  }\n\n  componentWillMount() {\n    const username = localStorage.getItem('chat_username');\n    this.setState({username: username ? username : 'Unknown'})\n    const messagesRef = database.ref('messages')\n      .orderByKey()\n      .limitToLast(100);\n\n    messagesRef.on('value', snapshot => {\n      let messagesObj = snapshot.val();\n      let messages = [];\n      const time = moment().format('LT');\n      console.log(time);\n      Object.keys(messagesObj).forEach(key => messages.push(messagesObj[key]));\n      messages = messages.map((message) => { return {text: message.text, user: message.user, id: message.key}})\n      this.setState(prevState => ({\n        messages: messages\n      }));\n    });\n  }\n\n  onAddMessage(event) {\n    const messagesEndRef = useRef(null);\n    event.preventDefault();\n    database.ref('messages').push({text: this.input.value, user: this.state.username});\n    this.input.value = '';\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n  }\n  \n  render() {\n    return (\n      <div className=\"box\">\n        <h2>Commitee Name</h2>\n        <div className=\"messages-div\">\n            {this.state.messages.map((message) => {\n             const _class = message.user === this.state.username ? 'message-left container' : 'message-right container';\n            return (\n                  <div className={_class}>\n                    <h6 className=\"name-heading\">{message.user}</h6>\n                    <p className=\"marg-left-10\">{message.text}</p>\n                    <span className=\"time-left\">{message.time}</span>\n                    <div ref={this.messagesEndRef} />\n                  </div>\n            )\n            })}\n        </div>\n        <textarea className=\"text-area\" ref={node => this.input = node}></textarea>\n        <button className=\"send_button\" onClick={this.onAddMessage}><center> <FontAwesomeIcon icon={faArrowCircleRight} size=\"2x\" /></center></button>\n    </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}